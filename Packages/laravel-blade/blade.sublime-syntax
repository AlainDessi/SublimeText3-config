%YAML 1.2
---
name: Laravel Blade
file_extensions: [blade, blade.php]
scope: text.blade
contexts:
  main:
    - match: ''
      push:
        - include: 'scope:text.html.basic'
        - meta_scope: text.html.blade
          pop: true
      with_prototype:

        - match: '{{--'
          captures:
            0: punctuation.definition.comment.begin.blade
          push:
            - meta_scope: comment.block.html.blade
            - match: '--}}'
              scope: punctuation.definition.comment.end.blade
              pop: true
            - match: "--"
              scope: invalid.illegal.bad-comments-or-CDATA.html.blade

        - match: '\{(!!)|(\{\{\{?)-?'
          captures:
            0: punctuation.section.embedded.begin.blade
          push:
            - meta_scope: entity.name.tag.blade
            - meta_content_scope: source.php.blade
            - match: '-?(\}?\}\})|(!!)\}'
              captures:
                0: punctuation.section.embedded.end.blade
                1: punctuation.section.embedded.end.blade
              pop: true
            - include: 'scope:source.php'

        - match: '@\{\{\{?-?'
          captures:
            0: punctuation.section.embedded.ignore.begin.blade
          push:
            - meta_scope: 'scope:text.html.basic'
            - meta_content_scope: 'scope:text.html.basic'
            - match: '-?\}?\}\}'
              captures:
                0: punctuation.section.embedded.ignore.end.blade
                1: punctuation.section.embedded.ignore.end.blade
              pop: true

        - match: '<\?(?i:php|=)?(?![^?]*\?>)'
          scope: punctuation.section.embedded.begin.php
          push:
            - meta_content_scope: source.php
            - meta_scope: meta.embedded.block.blade.php
            - include: 'scope:source.php'
          with_prototype:
          - match: (?=\?>)(\?>)
            captures:
              0: punctuation.section.embedded.end.php
            pop: true

        - match: '<\?(?i:php|=)?'
          scope: punctuation.section.embedded.begin.php
          push:
            - meta_content_scope: source.php.blade
            - meta_scope: meta.embedded.line.blade.php
            - include: 'scope:source.php'
          with_prototype:
          - match: (?=\?>)(\?>)
            captures:
              0: punctuation.section.embedded.end.php
            pop: true

        - match: '(\s{0}|^)(\@)\b(debug|embed|macrodef|set|unset|if|elseif|forelse|foreach|for|while|extends|unless|each|yield|lang|choice|section|include|render|block|can|cannot|inject|partial|hasSection|elsecan|elsecannot|stack|push|layout|continue|break|minify|macro|servers|task|hipchat|slack)\b(?=(|\s*|)\()'
          captures:
            0: entity.name.tag.block.any.html
            1: constant.other.inline-data.html
            2: constant.other.inline-data.html
          push:
            - meta_scope: custom.compiler.blade.php
            - meta_content_scope: source.php.blade
            - match: '(?<=\))'
              pop: true
            - include: 'scope:source.php'

        - match: '(\s{0}|^)(\@)\b(breakpoint|endmacro|endembed|empty|endif|endforelse|endforeach|endfor|endwhile|else|endunless|show|stop|endblock|endpartial|continue|break|endsection|parent|overwrite|endcan|endcannot|append|endpush|markdown|endmarkdown|endminify|endtask|setup|after|endsetup|endafter)\b'
          scope: custom.compiler.blade.php
          captures:
            0: entity.name.tag.block.any.html
            1: constant.other.inline-data.html
            2: constant.other.inline-data.html
          pop: false

        - match: '(\s{0}|^)(\@)\b([a-zA-Z_]+)\b(?=(|\s*|)\()'
          captures:
            0: constant.other.inline-data.html
            2: constant.other.inline-data.html
          push:
            - meta_scope: custom.compiler.blade.php
            - meta_content_scope: source.php.blade
            - match: '(?<=\))'
              pop: true
            - include: 'scope:source.php'

        - match: '(\s{0}|^)(\@)\b([a-zA-Z_]+)\b(\s?)\b'
          scope: custom.compiler.blade.php
          captures:
            0: constant.other.inline-data.html
            2: constant.other.inline-data.html
          pop: false
